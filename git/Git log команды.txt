git log --pretty=format:"%h - %an, %ar : %s"
показывает лог в форме списка

По умолчанию (без аргументов) git log перечисляет коммиты, сделанные в репозитории в обратном к 
хронологическому порядке — последние коммиты находятся вверху. Из примера можно увидеть, 
что данная команда перечисляет коммиты с их SHA-1 контрольными суммами, именем и электронной почтой автора, датой создания и сообщением коммита.

Команда git log имеет очень большое количество опций для поиска коммитов по разным критериям. 
Рассмотрим наиболее популярные из них.

Одним из самых полезных аргументов является -p или --patch, который показывает разницу (выводит патч), 
внесённую в каждый коммит. Так же вы можете ограничить количество записей в выводе команды; используйте параметр -2 для вывода только двух записей:

$ git log -p -2


git log --stat

Эта опция отображает аналогичную информацию но содержит разницу для каждой записи. 
Очень удобно использовать данную опцию для код ревью или для быстрого просмотра серии внесённых изменений. 
Так же есть возможность использовать серию опций для обобщения. 
Например, если вы хотите увидеть сокращённую статистику для каждого коммита, вы можете использовать опцию --stat:

Следующей действительно полезной опцией является --pretty. Эта опция меняет формат вывода. 
Существует несколько встроенных вариантов отображения. Опция oneline выводит каждый коммит в одну строку, 
что может быть очень удобным если вы просматриваете большое количество коммитов. К тому же, опции short, 
full и fuller делают вывод приблизительно в том же формате, но с меньшим или большим количеством информации соответственно:

$ git log --pretty=oneline
ca82a6dff817ec66f44342007202690a93763949 Change version number
085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7 Remove unnecessary test
a11bef06a3f659402fe7563abf99ad00de2209e6 Initial commit



Таблица 1. Полезные опции для git log --pretty=format
Опция	Описания вывода
%H

Хеш коммита

%h

Сокращённый хеш коммита

%T

Хеш дерева

%t

Сокращённый хеш дерева

%P

Хеш родителей

%p

Сокращённый хеш родителей

%an

Имя автора

%ae

Электронная почта автора

%ad

Дата автора (формат даты можно задать опцией --date=option)

%ar

Относительная дата автора

%cn

Имя коммитера

%ce

Электронная почта коммитера

%cd

Дата коммитера

%cr

Относительная дата коммитера

%s

Содержание



Таблица 2. Наиболее распространённые опции для команды git log
Опция	Описание
-p

Показывает патч для каждого коммита.

--stat

Показывает статистику изменённых файлов для каждого коммита.

--shortstat

Отображает только строку с количеством изменений/вставок/удалений для команды --stat.

--name-only

Показывает список изменённых файлов после информации о коммите.

--name-status

Показывает список файлов, которые добавлены/изменены/удалены.

--abbrev-commit

Показывает только несколько символов SHA-1 чек-суммы вместо всех 40.

--relative-date

Отображает дату в относительном формате (например, «2 weeks ago») вместо стандартного формата даты.

--graph

Отображает ASCII граф с ветвлениями и историей слияний.

--pretty

Показывает коммиты в альтернативном формате. Возможные варианты опций: oneline, short, full, fuller и format (с помощью последней можно указать свой формат).

--oneline

Сокращение для одновременного использования опций --pretty=oneline --abbrev-commit.


Таблица 3. Опции для ограничения вывода команды git log
Опция	Описание
-(n)

Показывает только последние n коммитов.

--since, --after

Показывает только те коммиты, которые были сделаны после указанной даты.

--until, --before

Показывает только те коммиты, которые были сделаны до указанной даты.

--author

Показывает только те коммиты, в которых запись author совпадает с указанной строкой.

--committer

Показывает только те коммиты, в которых запись committer совпадает с указанной строкой.

--grep

Показывает только коммиты, сообщение которых содержит указанную строку.

-S

Показывает только коммиты, в которых изменение в коде повлекло за собой добавление или удаление указанной строки.



Подсказка
Предотвращение отображения коммитов слияния
В зависимости от используемого порядка работы, история коммитов в вашем репозитории 
может содержать большое количество коммитов слияния, которые сами по себе не очень информативны. 
Чтобы исключить их из вывода команды git log используйте опцию --no-merges.