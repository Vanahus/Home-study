Команда whoami позволяет выяснить имя пользователя:

whoami

kirill.m

Права пользователей
Абсолютно любой процесс, запускаемый в операционной системе, стартует от имени некоторого пользователя. 
Соответственно, его возможности по влиянию на файловую систему ограничены правами пользователя, от имени которого процесс запущен.

Обратите внимание, что мы говорим не «пользователь запустил процесс», а «процесс запускается от имени пользователя». 
Дело в том, что присутствие пользователя для запуска необязательно. Работая в командной строке, мы запускаем все сами. 
Но когда система загружается, то она запускает множество различных процессов автоматически.

Для многих процессов в системе создаются собственные пользователи с ограниченным набором прав.

Команда ps (сокращение от process status) выводит отчет о работающих процессах. Информацию о том, какой процесс и 
под каким пользователем запущен, можно получить из вывода ps aux:

ps aux

# Левый столбец — это имя пользователя
root      7717  0.0  0.0   4244  1504 ?        S    10:52   0:00 mpstat 1 3
kirill.m  7718  0.0  0.1  36084  3236 pts/0    R+   10:52   0:00 ps aux

Каждый каталог в директории /home — это домашний каталог конкретного пользователя. Поэтому они все имеют разных владельцев, как правило, совпадающих с именем директории.

Имя пользователя в системе должно быть уникальным, но его можно менять. 
Если посмотреть под капот этой системы, то мы увидим, что имя пользователя связано с идентификатором, 
называемым UID. Это число, которое и определяет пользователя.

Если поменяется имя пользователя, но идентификатор UID останется прежним, 
то все доступы останутся. Если сменится идентификатор, то фактически сменится 
и пользователь. Соответственно, новый пользователь потеряет доступы к старому аккаунту.

Посмотреть свой идентификатор можно разными способами. Первый способ — с помощью команды id:

id

uid=1002(kirill.m) gid=1002(kirill.m) groups=1002(kirill.m),999(docker)

Второй способ связан с просмотром одного важного файла, который выступает основным хранилищем пользователей в *nix-системах. Да, это обычный текстовый файл, как и все остальное:

cat /etc/passwd

Права групп пользователей
Кроме имени, у пользователей *nix-систем есть связанное с ним понятие — группа. 
Она создана для группового доступа к разделяемому (общему) ресурсу — например, файлу.

Например, у нас есть группа разработчиков, которые регулярно заходят на сервер. 
Им нужно дать одинаковые возможности по управлению определенными файлами. 
Владелец у файла ровно один, поэтому мы не можем решить этот вопрос через смену владельца. 
Для этого нужно создать группу и привязать ее к самому пользователю.

Группы, ассоциированные с текущим пользователем, показываются в выводе команды id:

id

uid=1002(kirill.m) gid=1002(kirill.m) groups=1002(kirill.m),999(docker)

Здесь группа kirill.m считается основной — такая группа может быть только одна, 
и именно в нее входят любые создаваемые файлы от имени текущего пользователя. Кроме основной, 
пользователь может входить в произвольное число дополнительных групп. То, 
как это влияет на доступы, мы рассмотрим в одном из следующих уроков.

В любой *nix-системе присутствует специальный пользователь — root или суперпользователь. 
Главная его особенность — это идентификатор со значением 0. Этот пользователь имеет особое 
значение и может выполнять абсолютно любые действия в системе. У пользователя root в файле 
/etc/passwd будет вот такая запись:

root:x:0:0:root:/root:/bin/bash

Крайне не рекомендуем использовать root на регулярной основе, и ни в коем 
случае не входить под ним в систему. Суперпользователь — это прямой доступ ко всему 
и большая дыра в безопасности системы. Кроме того, через него систему очень легко убить: 
например, удалить не тот файл или испортить важную конфигурацию, после чего вход в систему станет невозможным.

Несмотря на это, root нужен для выполнения некоторых привилегированных действий, которые 
недоступны обычным пользователям. Об этом мы поговорим в следующем уроке.

имя
id - печать реальных и действенных идентификаторов пользователей и групп.

краткий обзор
идентификатор [ПАРАМЕТР]... [ПОЛЬЗОВАТЕЛЬ]...
SYNOPSIS
       id [OPTION]... [USER]...

описание id 
Распечатайте информацию о пользователе и группе для каждого указанного ПОЛЬЗОВАТЕЛЯ или (если ПОЛЬЗОВАТЕЛЬ не указан) для текущего пользователя.

-a пропуск, для совместимости с другими версиями

-Z, --контекст
выводить только контекст безопасности процесса

-g, --group
выводить только действующий идентификатор группы

-G, --groups
выводить все идентификаторы групп

-n, --name
выводить имя вместо номера, например -ugG

-r, --real
введите реальный идентификатор вместо действительного с помощью -ugG

-u, --user
введите только действующий идентификатор пользователя

-z, --ноль
разделяйте записи символами NUL, а не пробелами;

в формате по умолчанию это запрещено

--help отобразите эту справку и закройте

--version
выведите информацию о версии и закройте